<?xml version="1.0"?>
<launch>

  <arg name="robot_model"           default="hera_full"/>
  <arg name="init_pos_x" 	          default="0.0"/>
  <arg name="init_pos_y" 	          default="0.0"/>
  <arg name="init_yaw"   	          default="0.0"/>
  <arg name="map_name"              default="empty"/>
  <arg name="use_fake_localization" default="false"/>

  <arg name="global_planner"        default="navfn/NavfnROS"/>
  <arg name="local_planner"         default="base_local_planner/TrajectoryPlannerROS"/>
  <arg name="global_layers"         default="[ {name: static_layer, type: 'costmap_2d::StaticLayer'}, {name: obstacles_layer, type: 'costmap_2d::VoxelLayer'}, {name: inflation_layer, type: 'costmap_2d::InflationLayer'}]" />
  <arg name="local_layers"          default="[ {name: obstacles_layer, type: 'costmap_2d::VoxelLayer'}, {name: inflation_layer, type: 'costmap_2d::InflationLayer'}]"/>
  <arg name="observation_sources"   default="laser_scan_front_observation"/>
  <arg name="xy_goal_tolerance"     default="0.1"/>
  <arg name="yaw_goal_tolerance"    default="0.05"/>

  <arg name="enable_description"    default="true"/>
  <arg name="enable_map"            default="true"/>
  <arg name="enable_localization"   default="true"/>
  <arg name="enable_navigation"     default="true"/>

  <!-- ##################################################################### -->

  <!-- load hera description -->
  <group if="$(arg enable_description)" >
    <include file="$(find hera_description)/launch/load_description.launch">
      <arg name="robot_model" default="$(arg robot_model)"/>
      <arg name="init_pos_x" 	default="$(arg init_pos_x)"/>
      <arg name="init_pos_y" 	default="$(arg init_pos_y)"/>
      <arg name="init_yaw"   	default="$(arg init_yaw)"/>
    </include>
  </group>

  <!-- load map -->
  <group if="$(arg enable_map)" >
    <node name="map_server" pkg="map_server" type="map_server" output="screen"
      args="$(find hera_bringup)/resources/map/$(arg map_name)/map.yaml"/>
    </group>

  <!-- localization -->
  <group if="$(arg enable_localization)" >
    <include file="$(find hera_nav)/launch/localization.xml">
      <arg name="use_fake_localization" default="$(arg use_fake_localization)"/>
    </include>
  </group>

  <!-- navigation -->
  <group if="$(arg enable_navigation)" >
    <include file="$(find hera_nav)/launch/navigation.xml">
      <arg name="global_planner"      default="$(arg global_planner)"/>
      <arg name="local_planner"       default="$(arg local_planner)"/>
      <arg name="global_layers"       default="$(arg global_layers)"/>
      <arg name="local_layers"        default="$(arg local_layers)"/>
      <arg name="observation_sources" default="$(arg observation_sources)"/>
      <arg name="xy_goal_tolerance"   default="$(arg xy_goal_tolerance)"/>
      <arg name="yaw_goal_tolerance"  default="$(arg yaw_goal_tolerance)"/>
    </include>
  </group>

  <!-- <node name="joint_torso_to_torso_sensor_plat" pkg="rosservice" type="rosservice"
    respawn="true" args="call /gazebo/set_model_configuration '{model_name: \'robot\', urdf_param_name: \'robot\', joint_names:[\'joint_torso_to_torso_sensor_plat\'], joint_positions:[0]}'" /> -->

</launch>
