<?xml version="1.0"?>
<launch>

    <!-- find path to devices ports -->
    <node name="laser" pkg="hera_bringup" type="path_finder.py" args="15d1 0000"/>
    <node name="arduino_base" pkg="hera_bringup" type="path_finder.py" args="2341 003d"/>
    <!-- <node name="arduino_head" pkg="hera_bringup" type="path_finder.py" args="2341 0043"/> -->
    <!-- <node name="dynamixel" pkg="hera_bringup" type="path_finder.py" args="fff1 ff48"/> -->

    <!-- arduino base -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py">
      <param name="port" value="/dev/base"/>
      <param name="baud" value="38400"/>
    </node>

    <!-- odom base -->
    <node pkg="robot_base" type="odom.py" name="robot_base_odom"/>
    <node pkg="robot_base" type="utils.py" name="robot_base_utils">
      <param name="enable_clear_costmap" value="True"/>
      <param name="enable_amcl_update" value="True"/>
      <param name="clear_costmap_period" value="10"/>
      <param name="amcl_updates" value="10"/>
    </node>

    <!-- hokuyo laser front -->
    <node name="hokuyo_node" pkg="hokuyo_node" type="hokuyo_node" >
      <remap from="scan" to="base_scan_front" />
      <param name="port" value="/dev/front_laser"/>
      <param name="frame_id" value="base_scan_front"/>
      <param name="min_ang" value="-1.45"/>
      <param name="max_ang" value="1.45"/>
    </node>

    <!-- hokuyo laser back -->
    <!-- <node name="hokuyo_node_back" pkg="hokuyo_node" type="hokuyo_node" >
      <remap from="scan" to="base_scan_back" />
      <param name="port" value="/dev/ttyACM1"/>
      <param name="frame_id" value="base_scan_back_link"/>
      <param name="min_ang" value="-1.45"/>
      <param name="max_ang" value="1.45"/>
    </node> -->

    <!-- kinect -->

    <!--include file="$(find openni_launch)/launch/openni.launch"-->
      <!--<arg name="camera" default="camera" />-->
      <!--<arg name="device_id" default="1@X" />-->
    <!--/include-->

    <!--<include file="$(find freenect_launch)/launch/freenect.launch" >
      <arg name="camera" default="camera" />
    </include>-->

    <!-- xtion -->
   <!-- <include file="$(find openni2_launch)/launch/openni2.launch" >
      <arg name="camera" default="xtion" />
      <arg name="device_id" default="1@X" />
    </include> -->

    <!-- head -->
    <!--include file="$(find head)/launch/head.launch" /-->

    <!-- manipulator -->
    <!-- <include file="$(find manip3)/launch/manip3.launch" /> -->
    <!-- <node name ="manipulator" pkg="manip3" type="manipulator.py" output="screen"/> -->

    <!-- people tracker -->
    <!-- <param name="forest_file" value="$(find leg_tracker)/config/trained_leg_detector_res=0.33.yaml" />
    <param name="scan_topic" value="/base_scan_front" />
    <param name="fixed_frame" value="base_scan_front"/>
    <param name="scan_frequency" value="10"/>
    <node pkg="leg_tracker" type="detect_leg_clusters" name="detect_leg_clusters" output="screen"/>
    <node pkg="leg_tracker" type="joint_leg_tracker.py" name="joint_leg_tracker" output="screen"/>
    <node pkg="leg_tracker" type="local_occupancy_grid_mapping" name="local_occupancy_grid_mapping" output="screen"/>
    <node pkg="social_perception" type="people_perception.py" name="people_perception" output="screen"/> -->

</launch>
